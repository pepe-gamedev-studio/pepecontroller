<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="user_cache_8cpp" kind="file">
    <compoundname>userCache.cpp</compoundname>
    <includes refid="user_cache_8h" local="yes">UserCache.h</includes>
    <includes refid="helper_8h" local="yes">helper.h</includes>
    <includes local="no">boost/log/trivial.hpp</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="2549">
        <label>storage/models/user.h</label>
        <link refid="user_8h"/>
        <childnode refid="2550" relation="include">
        </childnode>
        <childnode refid="2551" relation="include">
        </childnode>
        <childnode refid="2552" relation="include">
        </childnode>
      </node>
      <node id="2553">
        <label>list</label>
      </node>
      <node id="2557">
        <label>boost/multi_index/ordered_index.hpp</label>
      </node>
      <node id="2558">
        <label>boost/multi_index/identity.hpp</label>
      </node>
      <node id="2551">
        <label>sqlite_orm/sqlite_orm.h</label>
      </node>
      <node id="2547">
        <label>F:/projects/pepecontroller/pepecontroller/src/userCache.cpp</label>
        <link refid="userCache.cpp"/>
        <childnode refid="2548" relation="include">
        </childnode>
        <childnode refid="2561" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2564" relation="include">
        </childnode>
      </node>
      <node id="2552">
        <label>string</label>
      </node>
      <node id="2563">
        <label>boost/log/trivial.hpp</label>
      </node>
      <node id="2561">
        <label>helper.h</label>
        <link refid="helper_8h"/>
        <childnode refid="2549" relation="include">
        </childnode>
        <childnode refid="2562" relation="include">
        </childnode>
      </node>
      <node id="2556">
        <label>boost/multi_index/hashed_index.hpp</label>
      </node>
      <node id="2562">
        <label>iostream</label>
      </node>
      <node id="2559">
        <label>boost/multi_index/member.hpp</label>
      </node>
      <node id="2555">
        <label>boost/multi_index_container.hpp</label>
      </node>
      <node id="2550">
        <label>../column.h</label>
        <link refid="column_8h"/>
        <childnode refid="2551" relation="include">
        </childnode>
      </node>
      <node id="2564">
        <label>algorithm</label>
      </node>
      <node id="2560">
        <label>boost/multi_index/mem_fun.hpp</label>
      </node>
      <node id="2548">
        <label>UserCache.h</label>
        <link refid="user_cache_8h"/>
        <childnode refid="2549" relation="include">
        </childnode>
        <childnode refid="2553" relation="include">
        </childnode>
        <childnode refid="2554" relation="include">
        </childnode>
        <childnode refid="2552" relation="include">
        </childnode>
        <childnode refid="2555" relation="include">
        </childnode>
        <childnode refid="2556" relation="include">
        </childnode>
        <childnode refid="2557" relation="include">
        </childnode>
        <childnode refid="2558" relation="include">
        </childnode>
        <childnode refid="2559" relation="include">
        </childnode>
        <childnode refid="2560" relation="include">
        </childnode>
      </node>
      <node id="2554">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="user_cache_8cpp_1abce9c7d46c73610bb799c5c6d1985a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ToLowercase</definition>
        <argsstring>(std::string &amp;str)</argsstring>
        <name>ToLowercase</name>
        <param>
          <type>std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/projects/pepecontroller/pepecontroller/src/userCache.cpp" line="7" column="1" bodyfile="F:/projects/pepecontroller/pepecontroller/src/userCache.cpp" bodystart="7" bodyend="14"/>
        <referencedby refid="struct_name_hash_1a274b87d1bfba09ac83fe9f6ea0bbb2a6" compoundref="user_cache_8cpp" startline="16" endline="21">NameHash::operator()</referencedby>
        <referencedby refid="struct_name_comp_1a058535d86123cb1ea8c21183fda32092" compoundref="user_cache_8cpp" startline="23" endline="29">NameComp::operator()</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="user_cache_8h" kindref="compound">UserCache.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helper_8h" kindref="compound">helper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/log/trivial.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="user_cache_8cpp_1abce9c7d46c73610bb799c5c6d1985a82" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="user_cache_8cpp_1abce9c7d46c73610bb799c5c6d1985a82" kindref="member">ToLowercase</ref>(std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>utf8<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>std::transform(str.begin(),<sp/>str.end(),<sp/>str.begin(),<sp/>[](</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tolower(c);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="struct_name_hash_1a274b87d1bfba09ac83fe9f6ea0bbb2a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_name_hash_1a274b87d1bfba09ac83fe9f6ea0bbb2a6" kindref="member">NameHash::operator()</ref>(std::string<sp/>str)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="17"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="user_cache_8cpp_1abce9c7d46c73610bb799c5c6d1985a82" kindref="member">ToLowercase</ref>(str);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::hash&lt;std::string&gt;()(str);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="struct_name_comp_1a058535d86123cb1ea8c21183fda32092" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_name_comp_1a058535d86123cb1ea8c21183fda32092" kindref="member">NameComp::operator()</ref>(std::string<sp/>a,<sp/>std::string<sp/>b)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="24"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="user_cache_8cpp_1abce9c7d46c73610bb799c5c6d1985a82" kindref="member">ToLowercase</ref>(a);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="user_cache_8cpp_1abce9c7d46c73610bb799c5c6d1985a82" kindref="member">ToLowercase</ref>(b);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>==<sp/>b;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_user_cache_1ad6567d3487f29061874410ff3225a2d7" refkind="member"><highlight class="normal"><ref refid="class_user_cache_1ad6567d3487f29061874410ff3225a2d7" kindref="member">UserCache::UserCache</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity)<sp/>:<sp/>capacity(capacity)<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_user_cache_1af2a35049ccbf135413f3704286e93e7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_user_cache_1af2a35049ccbf135413f3704286e93e7a" kindref="member">UserCache::Insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstorage_1_1models_1_1user_1_1_user" kindref="compound">UserCache::User</ref>&amp;<sp/>val)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_user_cache_1a8a4dcfbd2d50404bd6643e7825dde818" kindref="member">Get</ref>(val.<ref refid="structstorage_1_1models_1_1user_1_1_user_1a5ad4ea26e0da403edaf17afe311a5838" kindref="member">id</ref>))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.size()<sp/>&gt;=<sp/><ref refid="class_user_cache_1a0d0066241fa578a8ea5f152be3e38b44" kindref="member">capacity</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lr<sp/>=<sp/><ref refid="class_user_cache_1a37b74e1a34360ab00f08a85ef37b92ce" kindref="member">index</ref>.get&lt;0&gt;().find(<ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.front()-&gt;id);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(lr<sp/>!=<sp/><ref refid="class_user_cache_1a37b74e1a34360ab00f08a85ef37b92ce" kindref="member">index</ref>.end());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_user_cache_1a37b74e1a34360ab00f08a85ef37b92ce" kindref="member">index</ref>.erase(lr);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.erase(<ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.begin());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.push_back(std::make_shared&lt;User&gt;(val));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user_cache_1a37b74e1a34360ab00f08a85ef37b92ce" kindref="member">index</ref>.insert({<sp/><ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.back(),<sp/>--<ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.end()<sp/>});</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_LOG_TRIVIAL(debug)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[UserCache::Insert]<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>val;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_user_cache_1a8a4dcfbd2d50404bd6643e7825dde818" refkind="member"><highlight class="normal"><ref refid="class_user_cache_1a08a125ffb52a2eac20c7e59ae9ebfc90" kindref="member">UserCache::UserPtr</ref><sp/><ref refid="class_user_cache_1a8a4dcfbd2d50404bd6643e7825dde818" kindref="member">UserCache::Get</ref>(uint64_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>decltype(<ref refid="class_user_cache_1a37b74e1a34360ab00f08a85ef37b92ce" kindref="member">index</ref>)::nth_index&lt;0&gt;::type::iterator<sp/>found<sp/>=<sp/><ref refid="class_user_cache_1a37b74e1a34360ab00f08a85ef37b92ce" kindref="member">index</ref>.get&lt;0&gt;().find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>==<sp/><ref refid="class_user_cache_1a37b74e1a34360ab00f08a85ef37b92ce" kindref="member">index</ref>.end())</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--<ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.end()<sp/>!=<sp/>found-&gt;it)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.erase(found-&gt;it);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.push_back(found-&gt;data);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found-&gt;it<sp/>=<sp/>--<ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.end();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>found-&gt;data;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_user_cache_1a55013b5ccdfc0c995ecd5404b633c56f" refkind="member"><highlight class="normal"><ref refid="class_user_cache_1a08a125ffb52a2eac20c7e59ae9ebfc90" kindref="member">UserCache::UserPtr</ref><sp/><ref refid="class_user_cache_1a8a4dcfbd2d50404bd6643e7825dde818" kindref="member">UserCache::Get</ref>(std::string<sp/>name)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>found<sp/>=<sp/><ref refid="class_user_cache_1a37b74e1a34360ab00f08a85ef37b92ce" kindref="member">index</ref>.get&lt;1&gt;().find(name);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>==<sp/><ref refid="class_user_cache_1a37b74e1a34360ab00f08a85ef37b92ce" kindref="member">index</ref>.get&lt;1&gt;().end())</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--<ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.end()<sp/>!=<sp/>found-&gt;it)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.erase(found-&gt;it);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.push_back(found-&gt;data);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found-&gt;it<sp/>=<sp/>--<ref refid="class_user_cache_1a31e8a8f527d2b4c7452cfbc01e83fb9e" kindref="member">lru</ref>.end();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>found-&gt;data;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="F:/projects/pepecontroller/pepecontroller/src/userCache.cpp"/>
  </compounddef>
</doxygen>
