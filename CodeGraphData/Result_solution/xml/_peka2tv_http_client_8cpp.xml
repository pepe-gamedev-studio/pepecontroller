<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_peka2tv_http_client_8cpp" kind="file">
    <compoundname>Peka2tvHttpClient.cpp</compoundname>
    <includes refid="_peka2tv_http_client_8h" local="yes">Peka2tvHttpClient.h</includes>
    <includes local="no">boost/beast/core.hpp</includes>
    <includes local="no">boost/beast/http.hpp</includes>
    <includes local="no">boost/beast/version.hpp</includes>
    <includes local="no">boost/asio/connect.hpp</includes>
    <includes local="no">boost/asio/ip/tcp.hpp</includes>
    <includes local="no">boost/asio/ssl/error.hpp</includes>
    <includes local="no">boost/asio/ssl/stream.hpp</includes>
    <includes local="no">boost/asio/buffer.hpp</includes>
    <includes local="no">boost/network/uri.hpp</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">string_view</includes>
    <includes local="no">C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.28.29910/include/yvals.h</includes>
    <incdepgraph>
      <node id="2091">
        <label>boost/asio/connect.hpp</label>
      </node>
      <node id="2090">
        <label>boost/beast/version.hpp</label>
      </node>
      <node id="2088">
        <label>boost/beast/core.hpp</label>
      </node>
      <node id="2094">
        <label>boost/asio/ssl/stream.hpp</label>
      </node>
      <node id="2089">
        <label>boost/beast/http.hpp</label>
      </node>
      <node id="2095">
        <label>boost/asio/buffer.hpp</label>
      </node>
      <node id="2096">
        <label>boost/network/uri.hpp</label>
      </node>
      <node id="2084">
        <label>string</label>
      </node>
      <node id="2085">
        <label>exception</label>
      </node>
      <node id="2082">
        <label>Peka2tvHttpClient.h</label>
        <link refid="_peka2tv_http_client_8h"/>
        <childnode refid="2083" relation="include">
        </childnode>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2085" relation="include">
        </childnode>
        <childnode refid="2086" relation="include">
        </childnode>
        <childnode refid="2087" relation="include">
        </childnode>
      </node>
      <node id="2099">
        <label>C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.28.29910/include/yvals.h</label>
      </node>
      <node id="2098">
        <label>string_view</label>
      </node>
      <node id="2086">
        <label>optional</label>
      </node>
      <node id="2093">
        <label>boost/asio/ssl/error.hpp</label>
      </node>
      <node id="2092">
        <label>boost/asio/ip/tcp.hpp</label>
      </node>
      <node id="2097">
        <label>cstdlib</label>
      </node>
      <node id="2087">
        <label>type_traits</label>
      </node>
      <node id="2083">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="2081">
        <label>F:/projects/pepecontroller/pepecontroller/src/peka2tv/Peka2tvHttpClient.cpp</label>
        <link refid="Peka2tvHttpClient.cpp"/>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
        <childnode refid="2094" relation="include">
        </childnode>
        <childnode refid="2095" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacepeka2tv">peka2tv</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_peka2tv_http_client_8h" kindref="compound">Peka2tvHttpClient.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/beast/core.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/beast/http.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/beast/version.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio/connect.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio/ip/tcp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio/ssl/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio/ssl/stream.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio/buffer.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/network/uri.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespacepeka2tv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">peka2tv</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classpeka2tv_1_1_peka2tv_http_client_1a8e1dd79667b3e3ca989c96493d708b37" refkind="member"><highlight class="normal"><ref refid="classpeka2tv_1_1_peka2tv_http_client_1a8e1dd79667b3e3ca989c96493d708b37" kindref="member">Peka2tvHttpClient::Peka2tvHttpClient</ref>(std::string<sp/>entry)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::network::uri::uri<sp/>uri(entry);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpeka2tv_1_1_peka2tv_http_client_1a2485d43b32d43067a844c556ab763dd6" kindref="member">host</ref><sp/>=<sp/>uri.host();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpeka2tv_1_1_peka2tv_http_client_1ab2a213c7fdd4ba86909cba5b153fd4da" kindref="member">port</ref><sp/>=<sp/>uri.port().empty()<sp/>?</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uri.scheme()<sp/>==<sp/>std::string_view(</highlight><highlight class="stringliteral">&quot;http&quot;</highlight><highlight class="normal">)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;80&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;443&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>uri.port();</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classpeka2tv_1_1_peka2tv_http_client_1afac5aa60ef03c4e4936ab9aadcc07b4d" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classpeka2tv_1_1_peka2tv_http_client_1afac5aa60ef03c4e4936ab9aadcc07b4d" kindref="member">Peka2tvHttpClient::Call</ref>(std::string<sp/>method,<sp/>std::string<sp/>data)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>tcp<sp/>=<sp/>boost::asio::ip::tcp;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ssl<sp/>=<sp/>boost::asio::ssl;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">http<sp/>=<sp/>boost::beast::http;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::asio::io_context<sp/>ioc;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>ssl::context<sp/>ctx{<sp/>ssl::context::sslv23_client<sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.set_verify_mode(ssl::verify_peer);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>tcp::resolver<sp/>resolver{<sp/>ioc<sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>ssl::stream&lt;tcp::socket&gt;<sp/>stream{<sp/>ioc,<sp/>ctx<sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>stream.set_verify_mode(boost::asio::ssl::verify_none);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SSL_set_tlsext_host_name(stream.native_handle(),<sp/><ref refid="classpeka2tv_1_1_peka2tv_http_client_1a2485d43b32d43067a844c556ab763dd6" kindref="member">host</ref>.c_str()))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::system::error_code<sp/>ec{<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(::ERR_get_error()),<sp/>boost::asio::error::get_ssl_category()<sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>boost::system::system_error{<sp/>ec<sp/>};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>results<sp/>=<sp/>resolver.resolve(<ref refid="classpeka2tv_1_1_peka2tv_http_client_1a2485d43b32d43067a844c556ab763dd6" kindref="member">host</ref>.c_str(),<sp/><ref refid="classpeka2tv_1_1_peka2tv_http_client_1ab2a213c7fdd4ba86909cba5b153fd4da" kindref="member">port</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::asio::connect(stream.next_layer(),<sp/>results.begin(),<sp/>results.end());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>stream.handshake(ssl::stream_base::client);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>http::request&lt;http::string_body&gt;<sp/>req{<sp/>http::verb::post,<sp/>method,<sp/>version<sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>req.set(http::field::host,<sp/><ref refid="classpeka2tv_1_1_peka2tv_http_client_1a2485d43b32d43067a844c556ab763dd6" kindref="member">host</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>req.set(http::field::user_agent,<sp/>BOOST_BEAST_VERSION_STRING);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>req.set(http::field::content_type,<sp/></highlight><highlight class="stringliteral">&quot;application/json&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>req.body()<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>req.prepare_payload();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>http::write(stream,<sp/>req);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::beast::flat_buffer<sp/>buffer;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>http::response&lt;http::string_body&gt;<sp/>res;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>http::read(stream,<sp/>buffer,<sp/>res);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res.body();</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="F:/projects/pepecontroller/pepecontroller/src/peka2tv/Peka2tvHttpClient.cpp"/>
  </compounddef>
</doxygen>
